apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply from: '../base_module.gradle'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'io.fabric'

android {

    defaultConfig {
        applicationId "com.alimoradi.eliteplayer"
    }

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'String', "LAST_FM_KEY", last_fm_key
            buildConfigField 'String', "LAST_FM_SECRET", last_fm_secret
        }
        debug {
            minifyEnabled false
            //applicationIdSuffix ".debug"
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'String', "LAST_FM_KEY", last_fm_key
            buildConfigField 'String', "LAST_FM_SECRET", last_fm_secret
        }
    }


    lintOptions {
        checkReleaseBuilds false
        disable 'MissingTranslation'
    }

//    dynamicFeatures = [":feature_stylize"]

//    kotlinOptions.allWarningsAsErrors = true
}

apply from: '../kapt.gradle'


dependencies {
    implementation project(':appshortcuts')
    implementation project(':analytics')
    implementation project(':core')
    implementation project(':data')
    implementation project(':imageprovider')
    implementation project(':injection')
    implementation project(':media')
    implementation project(':prefskeys')
    implementation project(':presentation')
    implementation project(':sharedandroid')
    implementation project(':sharedwidgets')
    implementation project(':servicemusic')
    implementation project(':servicefloating')
    implementation project(':offlinelyrics')
    implementation project(':intents')
    implementation project(':shared')

    implementation lib_core.coroutines

    // google architecture components
    implementation lib_x.lifecycle_runtime
    implementation lib_x.lifecycle_extensions
    implementation lib_x.lifecycle_java8
    implementation lib_x.lifecycle_viewmodel

    implementation lib_x.core_ktx
    implementation lib_x.appcompat
    implementation lib_x.browser
    implementation lib_x.preference

    // dagger
    implementation lib_core.dagger
    kapt lib_core.dagger_processor
    implementation lib_core.dagger_android
    implementation lib_core.dagger_android_support
    kapt lib_core.dagger_android_processor

    implementation lib_ui.blur_kit
    implementation lib_ui.custom_tabs

    // debug
    debugImplementation lib_debug.leak_canary_debug

    debugImplementation lib_debug.stetho

    // firebase
    implementation lib_analytics.core
    implementation lib_analytics.crashlytics
    implementation lib_analytics.perf
}

// leave at bottom
apply plugin: 'com.google.gms.google-services'